import { jsx as _jsx } from "react/jsx-runtime";
import { getHours, getHoursMinutes, getHoursMinutesSeconds } from '@wojtekmaj/date-utils';
export default function NativeInput({ ariaLabel, disabled, maxTime, minTime, name, onChange, required, value, valueType, }) {
    const nativeValueParser = (() => {
        switch (valueType) {
            case 'hour':
                return (receivedValue) => `${getHours(receivedValue)}:00`;
            case 'minute':
                return getHoursMinutes;
            case 'second':
                return getHoursMinutesSeconds;
            default:
                throw new Error('Invalid valueType');
        }
    })();
    const step = (() => {
        switch (valueType) {
            case 'hour':
                return 3600;
            case 'minute':
                return 60;
            case 'second':
                return 1;
            default:
                throw new Error('Invalid valueType');
        }
    })();
    function stopPropagation(event) {
        event.stopPropagation();
    }
    return (_jsx("input", { "aria-label": ariaLabel, disabled: disabled, hidden: true, max: maxTime ? nativeValueParser(maxTime) : undefined, min: minTime ? nativeValueParser(minTime) : undefined, name: name, onChange: onChange, onFocus: stopPropagation, required: required, step: step, style: {
            visibility: 'hidden',
            position: 'absolute',
            zIndex: '-999',
        }, type: "time", value: value ? nativeValueParser(value) : '' }));
}
